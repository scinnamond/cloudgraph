<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://www.cloudgraph.org/state"
    xmlns:cloudgraph="http://www.cloudgraph.org/state"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:jxb="http://java.sun.com/xml/ns/jaxb" jxb:version="2.0">
 
    <xsd:complexType name="StateModel">
        <xsd:annotation>
            <xsd:documentation>
            <![CDATA[
Top level state container.
<p>
In general, mappings within the state structure are 
designed and included for the purpose of consolidation of 
potentially repetitive data which would otherwise be included
within cells as column data or as part of composite column
qualifiers.  
</p>
@author Scott Cinnamond
@since 0.5.2]]>
            </xsd:documentation>
            <!-- Note: adding jaxb/javadoc annotation here causes XJC parse error where root element 'not expected'-->
        </xsd:annotation>

        <xsd:sequence>
            <xsd:element name="URI" type="cloudgraph:URI" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="UUID" type="cloudgraph:UUID" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="RowKey" type="cloudgraph:RowKey" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="History" type="cloudgraph:History" minOccurs="0" maxOccurs="1">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
         
    </xsd:complexType>

    <xsd:element name="StateModel" type="cloudgraph:StateModel">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>    

    <xsd:complexType name="History">
        <xsd:annotation>
            <xsd:appinfo>
              <jxb:class>
                <jxb:javadoc><![CDATA[
The set of elements which are no longer effective for the current
state of a graph, but are part of its "cell" history.  
<p>
Sparse columnar data stores typically preserve cell histories. For instance
in HBase a {row, column, version} tuple exactly specifies a cell. And it is 
possible to have an unbounded number of cells where the row and column are the 
same but the cell address differs only in its version dimension.
The graph state history is therefore preserved in order to enable features
which involve re-constituting prior states of a graph.
</p>
@author Scott Cinnamond
@since 0.5.2
                ]]></jxb:javadoc>
              </jxb:class>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="UUID" type="cloudgraph:UUID" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="RowKey" type="cloudgraph:RowKey" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="History" type="cloudgraph:History">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>
        
    <xsd:complexType name="URI">
        <xsd:annotation>
            <xsd:appinfo>
              <jxb:class>
                <jxb:javadoc><![CDATA[
A container for type mappings which is specific to a namespace 
universal resource identifier (URI). Contains
one or more type maps.  
<p>
This an other mappings within the state structure are 
designed and included for the purpose of consolidation of 
potentially repetitive data which would otherwise be included
within cells as column data or as part of composite column
qualifiers. 
</p>
@see TypeMap
@author Scott Cinnamond
@since 0.5.2
                ]]></jxb:javadoc>
              </jxb:class>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="Type" type="cloudgraph:TypeEntry" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The collection of types within a URI map.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="uri" type="xsd:string" use="required">
            <xsd:annotation>                                  
                <xsd:documentation>The string of characters used to identify a name or a resource.</xsd:documentation>       
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The string of characters used to identify a name or a resource.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
    </xsd:complexType>    

    <xsd:element name="URI" type="cloudgraph:URI">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="TypeEntry">
        <xsd:annotation>
            <xsd:appinfo>
              <jxb:class>
                <jxb:javadoc><![CDATA[
A key/value map structure containing UUIDs, mapped to integral 
sequence numbers, unique within a type, unique within a URI. If an abstract
type is used, then each entry <b>must</b> indicate the derived non-abstract
type to use for instantiation of data objects. 
<p>
This an other mappings within the state structure are 
designed and included for the purpose of consolidation of 
potentially repetitive data which would otherwise be included
within cells as column data or as part of composite column
qualifiers. 
</p>
@see URIMap
@see TypeMapEntry
@author Scott Cinnamond
@since 0.5.2
                ]]></jxb:javadoc>
              </jxb:class>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>                                  
                <xsd:documentation>The name of the SDO type which, along with the URI, uniquely identifies a type.</xsd:documentation>       
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The name of the SDO type which, along with the namespace URI, uniquely identifies a type. 
type to use for instantiation of data objects.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
        <xsd:attribute name="uri" type="xsd:string" use="optional">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The name of the SDO URI - not used for marshalling - maintained in memory only as a lookup convienence]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
        <xsd:attribute name="id" type="xsd:int" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The sequence identifier of the SDO type, unique for the type within
a graph, which identifies the type under which 
an instance was persisted. The type mey be an abstract type or
derivative (a sub-type) of an abstract or concrete type.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute> 
        <xsd:attribute name="hashCode" type="xsd:int" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The integer hash code for the SDO type.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute> 
    </xsd:complexType>

    <xsd:element name="TypeEntry" type="cloudgraph:TypeEntry">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="UUID">
        <xsd:annotation>
            <xsd:appinfo>
              <jxb:class>
                <jxb:javadoc><![CDATA[
A unique identifier for an instance 
containing a universally unique identifier (UUID) mapped to
a type identifier, unique to all types used within a graph,
and a sequence id for the instance.
<p>
This an other mappings within the state structure are 
designed and included for the purpose of consolidation of 
potentially repetitive data which would otherwise be included
within cells as column data or as part of composite column
qualifiers. 
</p>
@author Scott Cinnamond
@since 0.5.2
                ]]></jxb:javadoc>
              </jxb:class>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:simpleContent>
        <xsd:extension base="xsd:string">
        <xsd:attribute name="id" type="xsd:int" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The sequence identifier unique to all instances of this type 
within a single graph, as indicated by the given type identifier.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
        <xsd:attribute name="typeId" type="xsd:int" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The sequence identifier of the SDO type which identifies the type under which 
an instance was persisted. The type mey be an abstract type or
derivative (a sub-type) of an abstract or concrete type.]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute> 
        </xsd:extension>
        </xsd:simpleContent>                
    </xsd:complexType>

    <xsd:element name="UUID" type="cloudgraph:UUID">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    
    <xsd:complexType name="RowKey">
        <xsd:annotation>
            <xsd:appinfo>
              <jxb:class>
                <jxb:javadoc><![CDATA[
A member or entry in a row key map containing a uuid/row-key, key/value pair. 
<p>
This an other mappings within the state structure are 
designed and included for the purpose of consolidation of 
potentially repetitive data which would otherwise be included
within cells as column data or as part of composite column
qualifiers. 
</p>
@author Scott Cinnamond
@since 0.5.2
                ]]></jxb:javadoc>
              </jxb:class>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:simpleContent>
        <xsd:extension base="xsd:string">
        <xsd:attribute name="uuid" type="xsd:string" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The universal resource identifier]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
        <xsd:attribute name="table" type="xsd:string" use="required">
            <xsd:annotation>                                  
                <xsd:appinfo><jxb:property><jxb:javadoc>
<![CDATA[The table containing the row]]>
                </jxb:javadoc></jxb:property></xsd:appinfo>
            </xsd:annotation>                                 
        </xsd:attribute>                 
        </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:element name="RowKey" type="cloudgraph:RowKey">
        <xsd:annotation>
            <xsd:documentation></xsd:documentation>
        </xsd:annotation>
    </xsd:element>

</xsd:schema>